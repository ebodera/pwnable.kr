
fd:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 c5                	add    %al,%ch
 8048199:	ec                   	in     (%dx),%al
 804819a:	c1 69 08 66          	shrl   $0x66,0x8(%ecx)
 804819e:	b3 bb                	mov    $0xbb,%bl
 80481a0:	08 5d 59             	or     %bl,0x59(%ebp)
 80481a3:	e8 7a ad 26 a1       	call   a92b2f22 <_end+0xa1268ea2>
 80481a8:	e3 86                	jecxz  8048130 <_init-0x200>
 80481aa:	aa                   	stos   %al,%es:(%edi)
 80481ab:	eb                   	.byte 0xeb

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	08 00                	or     %al,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 08                	add    %cl,(%eax)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1a4>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	33 00                	xor    (%eax),%eax
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	2e 00 00             	add    %al,%cs:(%eax)
	...
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 38                	add    %bh,(%eax)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 01                	add    %al,(%ecx)
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 20                	add    %ah,(%eax)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 29                	add    %ch,(%ecx)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
	...
 8048237:	00 12                	add    %dl,(%edx)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 3f                	add    %bh,(%edi)
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 1a                	add    %bl,(%edx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 2c 86             	add    %ch,(%esi,%eax,4)
 8048252:	04 08                	add    $0x8,%al
 8048254:	04 00                	add    $0x0,%al
 8048256:	00 00                	add    %al,(%eax)
 8048258:	11 00                	adc    %eax,(%eax)
 804825a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804825c <.dynstr>:
 804825c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804825f:	67 6d                	insl   (%dx),%es:(%di)
 8048261:	6f                   	outsl  %ds:(%esi),(%dx)
 8048262:	6e                   	outsb  %ds:(%esi),(%dx)
 8048263:	5f                   	pop    %edi
 8048264:	73 74                	jae    80482da <_init-0x56>
 8048266:	61                   	popa   
 8048267:	72 74                	jb     80482dd <_init-0x53>
 8048269:	5f                   	pop    %edi
 804826a:	5f                   	pop    %edi
 804826b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804826f:	63 2e                	arpl   %bp,(%esi)
 8048271:	73 6f                	jae    80482e2 <_init-0x4e>
 8048273:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048278:	4f                   	dec    %edi
 8048279:	5f                   	pop    %edi
 804827a:	73 74                	jae    80482f0 <_init-0x40>
 804827c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048283:	64 
 8048284:	00 65 78             	add    %ah,0x78(%ebp)
 8048287:	69 74 00 70 75 74 73 	imul   $0x737475,0x70(%eax,%eax,1),%esi
 804828e:	00 
 804828f:	72 65                	jb     80482f6 <_init-0x3a>
 8048291:	61                   	popa   
 8048292:	64 00 73 79          	add    %dh,%fs:0x79(%ebx)
 8048296:	73 74                	jae    804830c <_init-0x24>
 8048298:	65                   	gs
 8048299:	6d                   	insl   (%dx),%es:(%edi)
 804829a:	00 61 74             	add    %ah,0x74(%ecx)
 804829d:	6f                   	outsl  %ds:(%esi),(%dx)
 804829e:	69 00 5f 5f 6c 69    	imul   $0x696c5f5f,(%eax),%eax
 80482a4:	62 63 5f             	bound  %esp,0x5f(%ebx)
 80482a7:	73 74                	jae    804831d <_init-0x13>
 80482a9:	61                   	popa   
 80482aa:	72 74                	jb     8048320 <_init-0x10>
 80482ac:	5f                   	pop    %edi
 80482ad:	6d                   	insl   (%dx),%es:(%edi)
 80482ae:	61                   	popa   
 80482af:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 80482b6:	43                   	inc    %ebx
 80482b7:	5f                   	pop    %edi
 80482b8:	32 2e                	xor    (%esi),%ch
 80482ba:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080482bc <.gnu.version>:
 80482bc:	00 00                	add    %al,(%eax)
 80482be:	02 00                	add    (%eax),%al
 80482c0:	02 00                	add    (%eax),%al
 80482c2:	02 00                	add    (%eax),%al
 80482c4:	00 00                	add    %al,(%eax)
 80482c6:	02 00                	add    (%eax),%al
 80482c8:	02 00                	add    (%eax),%al
 80482ca:	02 00                	add    (%eax),%al
 80482cc:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482d0 <.gnu.version_r>:
 80482d0:	01 00                	add    %eax,(%eax)
 80482d2:	01 00                	add    %eax,(%eax)
 80482d4:	10 00                	adc    %al,(%eax)
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	10 00                	adc    %al,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	00 00                	add    %al,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482e3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482e8:	56                   	push   %esi
 80482e9:	00 00                	add    %al,(%eax)
 80482eb:	00 00                	add    %al,(%eax)
 80482ed:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482f0 <.rel.dyn>:
 80482f0:	f0 9f                	lock lahf 
 80482f2:	04 08                	add    $0x8,%al
 80482f4:	06                   	push   %es
 80482f5:	04 00                	add    $0x0,%al
	...

Disassembly of section .rel.plt:

080482f8 <.rel.plt>:
 80482f8:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482fe:	00 00                	add    %al,(%eax)
 8048300:	04 a0                	add    $0xa0,%al
 8048302:	04 08                	add    $0x8,%al
 8048304:	07                   	pop    %es
 8048305:	02 00                	add    (%eax),%al
 8048307:	00 08                	add    %cl,(%eax)
 8048309:	a0 04 08 07 03       	mov    0x3070804,%al
 804830e:	00 00                	add    %al,(%eax)
 8048310:	0c a0                	or     $0xa0,%al
 8048312:	04 08                	add    $0x8,%al
 8048314:	07                   	pop    %es
 8048315:	04 00                	add    $0x0,%al
 8048317:	00 10                	add    %dl,(%eax)
 8048319:	a0 04 08 07 05       	mov    0x5070804,%al
 804831e:	00 00                	add    %al,(%eax)
 8048320:	14 a0                	adc    $0xa0,%al
 8048322:	04 08                	add    $0x8,%al
 8048324:	07                   	pop    %es
 8048325:	06                   	push   %es
 8048326:	00 00                	add    %al,(%eax)
 8048328:	18 a0 04 08 07 07    	sbb    %ah,0x7070804(%eax)
	...

Disassembly of section .init:

08048330 <_init>:
 8048330:	53                   	push   %ebx
 8048331:	83 ec 08             	sub    $0x8,%esp
 8048334:	e8 00 00 00 00       	call   8048339 <_init+0x9>
 8048339:	5b                   	pop    %ebx
 804833a:	81 c3 bb 1c 00 00    	add    $0x1cbb,%ebx
 8048340:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048346:	85 c0                	test   %eax,%eax
 8048348:	74 05                	je     804834f <_init+0x1f>
 804834a:	e8 51 00 00 00       	call   80483a0 <__gmon_start__@plt>
 804834f:	e8 1c 01 00 00       	call   8048470 <frame_dummy>
 8048354:	e8 87 02 00 00       	call   80485e0 <__do_global_ctors_aux>
 8048359:	83 c4 08             	add    $0x8,%esp
 804835c:	5b                   	pop    %ebx
 804835d:	c3                   	ret    

Disassembly of section .plt:

08048360 <read@plt-0x10>:
 8048360:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048366:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <read@plt>:
 8048370:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x30>

08048380 <puts@plt>:
 8048380:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x30>

08048390 <system@plt>:
 8048390:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x30>

080483a0 <__gmon_start__@plt>:
 80483a0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x30>

080483b0 <exit@plt>:
 80483b0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x30>

080483c0 <__libc_start_main@plt>:
 80483c0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x30>

080483d0 <atoi@plt>:
 80483d0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483d6:	68 30 00 00 00       	push   $0x30
 80483db:	e9 80 ff ff ff       	jmp    8048360 <_init+0x30>

Disassembly of section .text:

080483e0 <_start>:
 80483e0:	31 ed                	xor    %ebp,%ebp
 80483e2:	5e                   	pop    %esi
 80483e3:	89 e1                	mov    %esp,%ecx
 80483e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e8:	50                   	push   %eax
 80483e9:	54                   	push   %esp
 80483ea:	52                   	push   %edx
 80483eb:	68 d0 85 04 08       	push   $0x80485d0
 80483f0:	68 60 85 04 08       	push   $0x8048560
 80483f5:	51                   	push   %ecx
 80483f6:	56                   	push   %esi
 80483f7:	68 94 84 04 08       	push   $0x8048494
 80483fc:	e8 bf ff ff ff       	call   80483c0 <__libc_start_main@plt>
 8048401:	f4                   	hlt    
 8048402:	90                   	nop
 8048403:	90                   	nop
 8048404:	90                   	nop
 8048405:	90                   	nop
 8048406:	90                   	nop
 8048407:	90                   	nop
 8048408:	90                   	nop
 8048409:	90                   	nop
 804840a:	90                   	nop
 804840b:	90                   	nop
 804840c:	90                   	nop
 804840d:	90                   	nop
 804840e:	90                   	nop
 804840f:	90                   	nop

08048410 <__do_global_dtors_aux>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	53                   	push   %ebx
 8048414:	83 ec 04             	sub    $0x4,%esp
 8048417:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 804841e:	75 3f                	jne    804845f <__do_global_dtors_aux+0x4f>
 8048420:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048425:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804842a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048430:	c1 fb 02             	sar    $0x2,%ebx
 8048433:	83 eb 01             	sub    $0x1,%ebx
 8048436:	39 d8                	cmp    %ebx,%eax
 8048438:	73 1e                	jae    8048458 <__do_global_dtors_aux+0x48>
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048440:	83 c0 01             	add    $0x1,%eax
 8048443:	a3 44 a0 04 08       	mov    %eax,0x804a044
 8048448:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804844f:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048454:	39 d8                	cmp    %ebx,%eax
 8048456:	72 e8                	jb     8048440 <__do_global_dtors_aux+0x30>
 8048458:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804845f:	83 c4 04             	add    $0x4,%esp
 8048462:	5b                   	pop    %ebx
 8048463:	5d                   	pop    %ebp
 8048464:	c3                   	ret    
 8048465:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048470 <frame_dummy>:
 8048470:	55                   	push   %ebp
 8048471:	89 e5                	mov    %esp,%ebp
 8048473:	83 ec 18             	sub    $0x18,%esp
 8048476:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804847b:	85 c0                	test   %eax,%eax
 804847d:	74 12                	je     8048491 <frame_dummy+0x21>
 804847f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048484:	85 c0                	test   %eax,%eax
 8048486:	74 09                	je     8048491 <frame_dummy+0x21>
 8048488:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804848f:	ff d0                	call   *%eax
 8048491:	c9                   	leave  
 8048492:	c3                   	ret    
 8048493:	90                   	nop

08048494 <main>:
 8048494:	55                   	push   %ebp
 8048495:	89 e5                	mov    %esp,%ebp
 8048497:	57                   	push   %edi
 8048498:	56                   	push   %esi
 8048499:	83 e4 f0             	and    $0xfffffff0,%esp
 804849c:	83 ec 20             	sub    $0x20,%esp
 804849f:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 80484a3:	7f 16                	jg     80484bb <main+0x27>
 80484a5:	c7 04 24 30 86 04 08 	movl   $0x8048630,(%esp)
 80484ac:	e8 cf fe ff ff       	call   8048380 <puts@plt>
 80484b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80484b6:	e9 9e 00 00 00       	jmp    8048559 <main+0xc5>
 80484bb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484be:	83 c0 04             	add    $0x4,%eax
 80484c1:	8b 00                	mov    (%eax),%eax
 80484c3:	89 04 24             	mov    %eax,(%esp)
 80484c6:	e8 05 ff ff ff       	call   80483d0 <atoi@plt>
 80484cb:	2d 34 12 00 00       	sub    $0x1234,%eax
 80484d0:	89 44 24 18          	mov    %eax,0x18(%esp)
 80484d4:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 80484db:	00 
 80484dc:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
 80484e3:	00 
 80484e4:	c7 44 24 04 60 a0 04 	movl   $0x804a060,0x4(%esp)
 80484eb:	08 
 80484ec:	8b 44 24 18          	mov    0x18(%esp),%eax
 80484f0:	89 04 24             	mov    %eax,(%esp)
 80484f3:	e8 78 fe ff ff       	call   8048370 <read@plt>
 80484f8:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80484fc:	ba 46 86 04 08       	mov    $0x8048646,%edx
 8048501:	b8 60 a0 04 08       	mov    $0x804a060,%eax
 8048506:	b9 0a 00 00 00       	mov    $0xa,%ecx
 804850b:	89 d6                	mov    %edx,%esi
 804850d:	89 c7                	mov    %eax,%edi
 804850f:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
 8048511:	0f 97 c2             	seta   %dl
 8048514:	0f 92 c0             	setb   %al
 8048517:	89 d1                	mov    %edx,%ecx
 8048519:	28 c1                	sub    %al,%cl
 804851b:	89 c8                	mov    %ecx,%eax
 804851d:	0f be c0             	movsbl %al,%eax
 8048520:	85 c0                	test   %eax,%eax
 8048522:	75 24                	jne    8048548 <main+0xb4>
 8048524:	c7 04 24 50 86 04 08 	movl   $0x8048650,(%esp)
 804852b:	e8 50 fe ff ff       	call   8048380 <puts@plt>
 8048530:	c7 04 24 5c 86 04 08 	movl   $0x804865c,(%esp)
 8048537:	e8 54 fe ff ff       	call   8048390 <system@plt>
 804853c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048543:	e8 68 fe ff ff       	call   80483b0 <exit@plt>
 8048548:	c7 04 24 6a 86 04 08 	movl   $0x804866a,(%esp)
 804854f:	e8 2c fe ff ff       	call   8048380 <puts@plt>
 8048554:	b8 00 00 00 00       	mov    $0x0,%eax
 8048559:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804855c:	5e                   	pop    %esi
 804855d:	5f                   	pop    %edi
 804855e:	5d                   	pop    %ebp
 804855f:	c3                   	ret    

08048560 <__libc_csu_init>:
 8048560:	55                   	push   %ebp
 8048561:	57                   	push   %edi
 8048562:	56                   	push   %esi
 8048563:	53                   	push   %ebx
 8048564:	e8 69 00 00 00       	call   80485d2 <__i686.get_pc_thunk.bx>
 8048569:	81 c3 8b 1a 00 00    	add    $0x1a8b,%ebx
 804856f:	83 ec 1c             	sub    $0x1c,%esp
 8048572:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048576:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804857c:	e8 af fd ff ff       	call   8048330 <_init>
 8048581:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048587:	29 c7                	sub    %eax,%edi
 8048589:	c1 ff 02             	sar    $0x2,%edi
 804858c:	85 ff                	test   %edi,%edi
 804858e:	74 29                	je     80485b9 <__libc_csu_init+0x59>
 8048590:	31 f6                	xor    %esi,%esi
 8048592:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048598:	8b 44 24 38          	mov    0x38(%esp),%eax
 804859c:	89 2c 24             	mov    %ebp,(%esp)
 804859f:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485a3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485a7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485ab:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80485b2:	83 c6 01             	add    $0x1,%esi
 80485b5:	39 fe                	cmp    %edi,%esi
 80485b7:	75 df                	jne    8048598 <__libc_csu_init+0x38>
 80485b9:	83 c4 1c             	add    $0x1c,%esp
 80485bc:	5b                   	pop    %ebx
 80485bd:	5e                   	pop    %esi
 80485be:	5f                   	pop    %edi
 80485bf:	5d                   	pop    %ebp
 80485c0:	c3                   	ret    
 80485c1:	eb 0d                	jmp    80485d0 <__libc_csu_fini>
 80485c3:	90                   	nop
 80485c4:	90                   	nop
 80485c5:	90                   	nop
 80485c6:	90                   	nop
 80485c7:	90                   	nop
 80485c8:	90                   	nop
 80485c9:	90                   	nop
 80485ca:	90                   	nop
 80485cb:	90                   	nop
 80485cc:	90                   	nop
 80485cd:	90                   	nop
 80485ce:	90                   	nop
 80485cf:	90                   	nop

080485d0 <__libc_csu_fini>:
 80485d0:	f3 c3                	repz ret 

080485d2 <__i686.get_pc_thunk.bx>:
 80485d2:	8b 1c 24             	mov    (%esp),%ebx
 80485d5:	c3                   	ret    
 80485d6:	90                   	nop
 80485d7:	90                   	nop
 80485d8:	90                   	nop
 80485d9:	90                   	nop
 80485da:	90                   	nop
 80485db:	90                   	nop
 80485dc:	90                   	nop
 80485dd:	90                   	nop
 80485de:	90                   	nop
 80485df:	90                   	nop

080485e0 <__do_global_ctors_aux>:
 80485e0:	55                   	push   %ebp
 80485e1:	89 e5                	mov    %esp,%ebp
 80485e3:	53                   	push   %ebx
 80485e4:	83 ec 04             	sub    $0x4,%esp
 80485e7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80485ec:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485ef:	74 13                	je     8048604 <__do_global_ctors_aux+0x24>
 80485f1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80485f6:	66 90                	xchg   %ax,%ax
 80485f8:	83 eb 04             	sub    $0x4,%ebx
 80485fb:	ff d0                	call   *%eax
 80485fd:	8b 03                	mov    (%ebx),%eax
 80485ff:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048602:	75 f4                	jne    80485f8 <__do_global_ctors_aux+0x18>
 8048604:	83 c4 04             	add    $0x4,%esp
 8048607:	5b                   	pop    %ebx
 8048608:	5d                   	pop    %ebp
 8048609:	c3                   	ret    
 804860a:	90                   	nop
 804860b:	90                   	nop

Disassembly of section .fini:

0804860c <_fini>:
 804860c:	53                   	push   %ebx
 804860d:	83 ec 08             	sub    $0x8,%esp
 8048610:	e8 00 00 00 00       	call   8048615 <_fini+0x9>
 8048615:	5b                   	pop    %ebx
 8048616:	81 c3 df 19 00 00    	add    $0x19df,%ebx
 804861c:	e8 ef fd ff ff       	call   8048410 <__do_global_dtors_aux>
 8048621:	83 c4 08             	add    $0x8,%esp
 8048624:	5b                   	pop    %ebx
 8048625:	c3                   	ret    

Disassembly of section .rodata:

08048628 <_fp_hw>:
 8048628:	03 00                	add    (%eax),%eax
	...

0804862c <_IO_stdin_used>:
 804862c:	01 00                	add    %eax,(%eax)
 804862e:	02 00                	add    (%eax),%al
 8048630:	70 61                	jo     8048693 <_IO_stdin_used+0x67>
 8048632:	73 73                	jae    80486a7 <_IO_stdin_used+0x7b>
 8048634:	20 61 72             	and    %ah,0x72(%ecx)
 8048637:	67 76 5b             	addr16 jbe 8048695 <_IO_stdin_used+0x69>
 804863a:	31 5d 20             	xor    %ebx,0x20(%ebp)
 804863d:	61                   	popa   
 804863e:	20 6e 75             	and    %ch,0x75(%esi)
 8048641:	6d                   	insl   (%dx),%es:(%edi)
 8048642:	62 65 72             	bound  %esp,0x72(%ebp)
 8048645:	00 4c 45 54          	add    %cl,0x54(%ebp,%eax,2)
 8048649:	4d                   	dec    %ebp
 804864a:	45                   	inc    %ebp
 804864b:	57                   	push   %edi
 804864c:	49                   	dec    %ecx
 804864d:	4e                   	dec    %esi
 804864e:	0a 00                	or     (%eax),%al
 8048650:	67 6f                	outsl  %ds:(%si),(%dx)
 8048652:	6f                   	outsl  %ds:(%esi),(%dx)
 8048653:	64 20 6a 6f          	and    %ch,%fs:0x6f(%edx)
 8048657:	62 20                	bound  %esp,(%eax)
 8048659:	3a 29                	cmp    (%ecx),%ch
 804865b:	00 2f                	add    %ch,(%edi)
 804865d:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 8048660:	2f                   	das    
 8048661:	63 61 74             	arpl   %sp,0x74(%ecx)
 8048664:	20 66 6c             	and    %ah,0x6c(%esi)
 8048667:	61                   	popa   
 8048668:	67 00 6c 65          	add    %ch,0x65(%si)
 804866c:	61                   	popa   
 804866d:	72 6e                	jb     80486dd <_IO_stdin_used+0xb1>
 804866f:	20 61 62             	and    %ah,0x62(%ecx)
 8048672:	6f                   	outsl  %ds:(%esi),(%dx)
 8048673:	75 74                	jne    80486e9 <_IO_stdin_used+0xbd>
 8048675:	20 4c 69 6e          	and    %cl,0x6e(%ecx,%ebp,2)
 8048679:	75 78                	jne    80486f3 <_IO_stdin_used+0xc7>
 804867b:	20 66 69             	and    %ah,0x69(%esi)
 804867e:	6c                   	insb   (%dx),%es:(%edi)
 804867f:	65 20 49 4f          	and    %cl,%gs:0x4f(%ecx)
	...

Disassembly of section .eh_frame_hdr:

08048684 <.eh_frame_hdr>:
 8048684:	01 1b                	add    %ebx,(%ebx)
 8048686:	03 3b                	add    (%ebx),%edi
 8048688:	30 00                	xor    %al,(%eax)
 804868a:	00 00                	add    %al,(%eax)
 804868c:	05 00 00 00 dc       	add    $0xdc000000,%eax
 8048691:	fc                   	cld    
 8048692:	ff                   	(bad)  
 8048693:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 8048697:	00 10                	add    %dl,(%eax)
 8048699:	fe                   	(bad)  
 804869a:	ff                   	(bad)  
 804869b:	ff 70 00             	pushl  0x0(%eax)
 804869e:	00 00                	add    %al,(%eax)
 80486a0:	dc fe                	fdivr  %st,%st(6)
 80486a2:	ff                   	(bad)  
 80486a3:	ff 98 00 00 00 4c    	lcall  *0x4c000000(%eax)
 80486a9:	ff                   	(bad)  
 80486aa:	ff                   	(bad)  
 80486ab:	ff d4                	call   *%esp
 80486ad:	00 00                	add    %al,(%eax)
 80486af:	00 4e ff             	add    %cl,-0x1(%esi)
 80486b2:	ff                   	(bad)  
 80486b3:	ff                   	(bad)  
 80486b4:	e8                   	.byte 0xe8
 80486b5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080486b8 <__FRAME_END__-0xc8>:
 80486b8:	14 00                	adc    $0x0,%al
 80486ba:	00 00                	add    %al,(%eax)
 80486bc:	00 00                	add    %al,(%eax)
 80486be:	00 00                	add    %al,(%eax)
 80486c0:	01 7a 52             	add    %edi,0x52(%edx)
 80486c3:	00 01                	add    %al,(%ecx)
 80486c5:	7c 08                	jl     80486cf <_IO_stdin_used+0xa3>
 80486c7:	01 1b                	add    %ebx,(%ebx)
 80486c9:	0c 04                	or     $0x4,%al
 80486cb:	04 88                	add    $0x88,%al
 80486cd:	01 00                	add    %eax,(%eax)
 80486cf:	00 20                	add    %ah,(%eax)
 80486d1:	00 00                	add    %al,(%eax)
 80486d3:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80486d6:	00 00                	add    %al,(%eax)
 80486d8:	88 fc                	mov    %bh,%ah
 80486da:	ff                   	(bad)  
 80486db:	ff 80 00 00 00 00    	incl   0x0(%eax)
 80486e1:	0e                   	push   %cs
 80486e2:	08 46 0e             	or     %al,0xe(%esi)
 80486e5:	0c 4a                	or     $0x4a,%al
 80486e7:	0f 0b                	ud2    
 80486e9:	74 04                	je     80486ef <_IO_stdin_used+0xc3>
 80486eb:	78 00                	js     80486ed <_IO_stdin_used+0xc1>
 80486ed:	3f                   	aas    
 80486ee:	1a 3b                	sbb    (%ebx),%bh
 80486f0:	2a 32                	sub    (%edx),%dh
 80486f2:	24 22                	and    $0x22,%al
 80486f4:	24 00                	and    $0x0,%al
 80486f6:	00 00                	add    %al,(%eax)
 80486f8:	40                   	inc    %eax
 80486f9:	00 00                	add    %al,(%eax)
 80486fb:	00 98 fd ff ff cc    	add    %bl,-0x33000003(%eax)
 8048701:	00 00                	add    %al,(%eax)
 8048703:	00 00                	add    %al,(%eax)
 8048705:	41                   	inc    %ecx
 8048706:	0e                   	push   %cs
 8048707:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804870d:	4e                   	dec    %esi
 804870e:	86 04 87             	xchg   %al,(%edi,%eax,4)
 8048711:	03 02                	add    (%edx),%eax
 8048713:	b8 c6 41 c7 41       	mov    $0x41c741c6,%eax
 8048718:	0c 04                	or     $0x4,%al
 804871a:	04 c5                	add    $0xc5,%al
 804871c:	38 00                	cmp    %al,(%eax)
 804871e:	00 00                	add    %al,(%eax)
 8048720:	68 00 00 00 3c       	push   $0x3c000000
 8048725:	fe                   	(bad)  
 8048726:	ff                   	(bad)  
 8048727:	ff 61 00             	jmp    *0x0(%ecx)
 804872a:	00 00                	add    %al,(%eax)
 804872c:	00 41 0e             	add    %al,0xe(%ecx)
 804872f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048735:	87 03                	xchg   %eax,(%ebx)
 8048737:	41                   	inc    %ecx
 8048738:	0e                   	push   %cs
 8048739:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804873f:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 8048746:	0e                   	push   %cs
 8048747:	14 41                	adc    $0x41,%al
 8048749:	0e                   	push   %cs
 804874a:	10 c3                	adc    %al,%bl
 804874c:	41                   	inc    %ecx
 804874d:	0e                   	push   %cs
 804874e:	0c c6                	or     $0xc6,%al
 8048750:	41                   	inc    %ecx
 8048751:	0e                   	push   %cs
 8048752:	08 c7                	or     %al,%bh
 8048754:	41                   	inc    %ecx
 8048755:	0e                   	push   %cs
 8048756:	04 c5                	add    $0xc5,%al
 8048758:	10 00                	adc    %al,(%eax)
 804875a:	00 00                	add    %al,(%eax)
 804875c:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 804875d:	00 00                	add    %al,(%eax)
 804875f:	00 70 fe             	add    %dh,-0x2(%eax)
 8048762:	ff                   	(bad)  
 8048763:	ff 02                	incl   (%edx)
 8048765:	00 00                	add    %al,(%eax)
 8048767:	00 00                	add    %al,(%eax)
 8048769:	00 00                	add    %al,(%eax)
 804876b:	00 10                	add    %dl,(%eax)
 804876d:	00 00                	add    %al,(%eax)
 804876f:	00 b8 00 00 00 5e    	add    %bh,0x5e000000(%eax)
 8048775:	fe                   	(bad)  
 8048776:	ff                   	(bad)  
 8048777:	ff 04 00             	incl   (%eax,%eax,1)
 804877a:	00 00                	add    %al,(%eax)
 804877c:	00 00                	add    %al,(%eax)
	...

08048780 <__FRAME_END__>:
 8048780:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	30 83 04 08 0d 00    	xor    %al,0xd0804(%ebx)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	0c 86                	or     $0x86,%al
 8049f3e:	04 08                	add    $0x8,%al
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	5c                   	pop    %esp
 8049f4d:	82                   	(bad)  
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	60                   	pusha  
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	38 00                	cmp    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 f8                	add    %bh,%al
 8049f8d:	82                   	(bad)  
 8049f8e:	04 08                	add    $0x8,%al
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	f0 82                	lock (bad) 
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f d0             	ljmp   *-0x30(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f bc             	ljmp   *-0x44(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	76 83                	jbe    8049f85 <_DYNAMIC+0x5d>
 804a002:	04 08                	add    $0x8,%al
 804a004:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a00a:	04 08                	add    $0x8,%al
 804a00c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a00d:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a011:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a015:	83 04 08 d6          	addl   $0xffffffd6,(%eax,%ecx,1)
 804a019:	83                   	.byte 0x83
 804a01a:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a01c <__data_start>:
 804a01c:	00 00                	add    %al,(%eax)
	...

0804a020 <__dso_handle>:
 804a020:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <completed.6159>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <dtor_idx.6161>:
	...

0804a060 <buf>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482b8>
   a:	74 75                	je     81 <_init-0x80482af>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x804829a>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
